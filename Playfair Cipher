# Playfair Cipher in Python

print("\n\nWelcome to PLAYFAIR CIPHER")
key = input("Enter the secret key : ")
key = key.replace(" ", "")
key = key.upper()


def matrix(x, y, initial):
    return [[initial for _ in range(x)] for _ in range(y)]


result = list()
for c in key:  # storing key
    if c not in result:
        if c == 'J':
            result.append('I')
        else:
            result.append(c)
flag = 0
for i in range(65, 91):  # storing other character
    if chr(i) not in result:
        if i == 73 and chr(74) not in result:
            result.append("I")
            flag = 1
        elif flag == 0 and i == 73 or i == 74:
            pass
        else:
            result.append(chr(i))
k = 0
my_matrix = matrix(5, 5, 0)  # initialize matrix
for i in range(0, 5):  # making matrix
    for j in range(0, 5):
        my_matrix[i][j] = result[k]
        k += 1


def locindex(f):  # get location of each character
    loc = list()
    if f == 'J':
        f = 'I'
    for g, q in enumerate(my_matrix):
        for w, l in enumerate(q):
            if f == l:
                loc.append(g)
                loc.append(w)
                return loc


def encrypt():  # Encryption
    msg = input("\tYOU ARE NOW ENCRYPTIING THE MESSAGE \n\t\tENTER PLAIN TEXT :")
    msg = msg.upper()
    msg = msg.replace(" ", "")
    if msg.isalpha():
        i = 0
        for s in range(0, len(msg) + 1, 2):
            if s < len(msg) - 1:
                if msg[s] == msg[s + 1]:
                    msg = msg[:s + 1] + 'X' + msg[s + 1:]
        if len(msg) % 2 != 0:
            msg = msg[:] + 'X'
        print("\t\tCIPHER TEXT IS :", end=' ')
        while i < len(msg):
            list()
            loc = locindex(msg[i])
            list()
            loc1 = locindex(msg[i + 1])
            if loc[1] == loc1[1]:
                print("{}{}".format(my_matrix[(loc[0] + 1) % 5][loc[1]], my_matrix[(loc1[0] + 1) % 5][loc1[1]]),
                      end=' ')
            elif loc[0] == loc1[0]:
                print("{}{}".format(my_matrix[loc[0]][(loc[1] + 1) % 5], my_matrix[loc1[0]][(loc1[1] + 1) % 5]),
                      end=' ')
            else:
                print("{}{}".format(my_matrix[loc[0]][loc1[1]], my_matrix[loc1[0]][loc[1]]), end=' ')
            i = i + 2
    else:
        print("\tOnly letteres are allowed, Please try again")


def decrypt():  # decryption
    msg = input("\tYOU ARE NOW DECRYPTING THE MESSAGE \n\t\tENTER CIPHER TEXT : ")
    msg = msg.upper()
    msg = msg.replace(" ", "")
    if msg.isalpha():
        print("\t\tPLAIN TEXT IS : ", end=' ')
        i = 0
        while i < len(msg):
            list()
            loc = locindex(msg[i])
            list()
            loc1 = locindex(msg[i + 1])
            if loc[1] == loc1[1]:
                print("{}{}".format(my_matrix[(loc[0] - 1) % 5][loc[1]], my_matrix[(loc1[0] - 1) % 5][loc1[1]]),
                      end=' ')
            elif loc[0] == loc1[0]:
                print("{}{}".format(my_matrix[loc[0]][(loc[1] - 1) % 5], my_matrix[loc1[0]][(loc1[1] - 1) % 5]),
                      end=' ')
            else:
                print("{}{}".format(my_matrix[loc[0]][loc1[1]], my_matrix[loc1[0]][loc[1]]), end=' ')
            i = i + 2
    else:
        print("\tOnly letters are allowed, Please try again")


while '3':
    choice = input(
        "\n\tPress 1 for Encryption \n\tPress 2 for Decryption "
        "\n\tPress 3 to EXIT \n\tPLEASE SELECT WHAT YOU WANT TO DO ==> ")
    if choice == '1':
        encrypt()
    elif choice == '2':
        decrypt()
    elif choice == '3':
        exit()
    else:
        print("\tPlease Choose from the above mentioned list.")
